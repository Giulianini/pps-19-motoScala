language: bash
git:
  depth: false
os: linux
dist: xenial
env:
  - JDK="bellsoft-jdk8u265+1-linux-amd64-full"
stages:
  - check
  - deploy
jobs:
  include:
    - stage: check
      name: "Gradle check on Linux OS and JDK 8"
      os: linux
      script:
        - ./gradlew check --scan --parallel
    - stage: deploy
      name: "Deploy on Linux OS and JDK 8"
      os: linux
      #if: type != pull_request
      if: branch = release
      script:
        - RELEASE_NAME=$(./gradlew -q printGitSemVer | cut -f 2 -d:)
      env:
        - PUBLISH="true"
before_install:
  - echo "Downloading jdk"
  - wget https://github.com/sormuras/bach/raw/master/install-jdk.sh
  - source ./install-jdk.sh --url https://download.bell-sw.com/java/8u265+1/bellsoft-jdk8u265+1-linux-amd64-full.tar.gz
  - java -version
before_deploy:
  - echo "Preparing for deploy"
  - ./gradlew check assemble scaladoc --scan --parallel
  #- mkdir -p report
  #- cp --parent */build/reports build/reports report -R
  - mkdir -p build/reports/ report/build/reports
  - mkdir -p build/docs/ report/build/docs
  - cp -r build/docs/ report/build/docs
  - cp -r build/reports/ report/build/reports
deploy:
  - provider: releases
    api_key: $GITHUB_TOKEN
    file_glob: true
    file: "${HOME}/build/Unibo-PPS-1920/pps-19-motoScala/build/libs/pps-19-motoScala-*.jar"
    skip_cleanup: 'true'
    name: $RELEASE_NAME
    on:
      os: linux
      repo: Unibo-PPS-1920/pps-19-motoScala
      condition: $PUBLISH = "true"
      all_branches: true
  - provider: pages
    github_token: $GITHUB_TOKEN
    edge: true
    name: $RELEASE_NAME
    skip_cleanup: 'true'
    local_dir: "${HOME}/build/Unibo-PPS-1920/pps-19-motoScala/report"
    on:
      os: linux
      repo: Unibo-PPS-1920/pps-19-motoScala
      condition: $PUBLISH = "true"
      all_branches: true
